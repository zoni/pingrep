name: linters
on:
  push:
  pull_request:

permissions:
  contents: read

jobs:
  test:
    name: tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.20.x', '1.21.x']
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - run: go build .
      - run: go test -v -timeout=1m ./...
      - run: go test -race -timeout=5m -v ./...

  golangci:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: false  # golangci-lint has its own caching
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.54.1

  precommit:
    name: pre-commit
    runs-on: ubuntu-latest
    env:
      # These hooks are run as dedicated jobs above instead.
      SKIP: "gomodtidy,gotest,golangci-lint"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - uses: actions/setup-python@v3

      - name: set PYVERSION
        run: echo "PYVERSION=$(python --version | tr ' ' '-')" >> $GITHUB_ENV
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          # Changes to pre-commit-config.yaml may require the installation of
          # new binaries/scripts. When a cache hit occurs, changes to the cache
          # aren't persisted at the end of the run, so making the key dependent
          # on the configuration file ensures we always persist a complete cache.
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}@${{ env.PYVERSION }}

      - run: pip install pre-commit
      - run: pre-commit run --all --color=always --show-diff-on-failure
